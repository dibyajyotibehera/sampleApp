plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "io.spring.javaformat" version "0.0.27"
    id "org.owasp.dependencycheck" version "6.2.2"
    id "com.github.spotbugs" version "4.7.5"
    id "jacoco"
}

group = 'com.appCompany'
version = '0.0.1-SNAPSHOT'
sourceCompatibility=11
targetCompatibility=11
ext {
    set('springCloudVersion', "2020.0.3")
}

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'default'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation  "org.springframework.boot:spring-boot-starter-web"
    implementation  "org.springframework.boot:spring-boot-starter-validation"
    implementation  "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation  "org.springframework.cloud:spring-cloud-starter-sleuth"
    implementation   "net.logstash.logback:logstash-logback-encoder:5.2"
    implementation   "org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.9.RELEASE"
    implementation   "org.springframework.cloud:spring-cloud-starter-openfeign"
    runtimeOnly  "org.postgresql:postgresql"
    implementation  "org.springdoc:springdoc-openapi-ui:1.5.2"
    compileOnly  "org.projectlombok:lombok"
    compileOnly  "com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0"
    compileOnly   "net.jcip:jcip-annotations:1.0"
    compileOnly   "com.github.spotbugs:spotbugs-annotations:3.1.3"
    annotationProcessor  "org.projectlombok:lombok"
    testCompileOnly  "org.projectlombok:lombok"
    testAnnotationProcessor  "org.projectlombok:lombok"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "com.tngtech.archunit:archunit-junit5:0.21.0"
    testImplementation "com.h2database:h2"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacoco")
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1
            }
        }
    }
}

spotbugsMain {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotbugsTest {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
